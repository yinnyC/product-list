{"version":3,"sources":["data.js","Inventory/Inventory.js","CatagoryList/CatButton.js","CatagoryList/CategoryList.js","ProductList/Product.js","ProductList/ProductList.js","Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["data","allCategories","map","obj","category","cats","reduce","acc","cat","uniqueCategories","Object","keys","categoriesAndCounts","undefined","CatsAndCounts","name","count","push","length","total","parseFloat","price","slice","toFixed","totalUnits","parseInt","units","Inventory","className","CatButton","props","onClick","type","CatagoryList","includes","Product","description","rating","ProductList","filter","Header","titile","productCount","categoryCount","App","useState","setCategory","newCategory","index","indexOf","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6hcAEeA,IAETC,EAAgBD,EAAKE,KAAI,SAACC,GAAD,OAASA,EAAIC,YAItCC,EAAOJ,EAAcK,QAAO,SAACC,EAAKC,GAEtC,OADAD,EAAIC,GAAO,EACJD,IACN,IAEGE,EAAmBC,OAAOC,KAAKN,GAE/BO,EAAsBX,EAAcK,QAAO,SAACC,EAAKC,GAMrD,YALiBK,IAAbN,EAAIC,GACND,EAAIC,GAAO,EAEXD,EAAIC,IAAQ,EAEPD,IACN,IAGGO,EAAgBL,EAAiBP,KAAI,SAACa,GAAD,MAAW,CAAEA,OAAMC,MAAOJ,EAAoBG,OAEzFD,EAAcG,KAAK,CAAEF,KAAM,MAAOC,MAAOhB,EAAKkB,S,WCxBxCC,EAAQnB,EAAKM,QAAO,SAACC,EAAKJ,GAAN,OAAcI,EAAMa,WAAWjB,EAAIkB,MAAMC,MAAM,MAAK,GAAGC,QAAQ,GAEnFC,EAAaxB,EAAKM,QAAO,SAACC,EAAKJ,GAAN,OAAcI,EAAMkB,SAAStB,EAAIuB,MAAO,MAAK,GAiB7DC,MAff,WACE,OACE,sBAAKC,UAAU,YAAf,UACE,2DAEGT,KAEH,8CAEGK,SCKMK,MAnBf,SAAmBC,GAAQ,IAEvBf,EACEe,EADFf,KAAMC,EACJc,EADId,MAAOY,EACXE,EADWF,UAAWG,EACtBD,EADsBC,QAE1B,OACE,yBACEC,KAAK,SAELJ,UAAWA,EACXG,QAASA,EAJX,UAMGhB,EACD,+BACGC,MANED,I,MCSIkB,MAbf,SAAsBH,GAAQ,IACpB1B,EAAsB0B,EAAtB1B,SAAU2B,EAAYD,EAAZC,QAClB,OACE,qBAAKH,UAAU,eAAf,SACGd,EAAcZ,KAAI,SAACC,GAAS,IACnBY,EAAgBZ,EAAhBY,KAAMC,EAAUb,EAAVa,MACRY,EAAYxB,EAAS8B,SAASnB,GAAQ,WAAa,GACzD,OAAO,cAAC,EAAD,CAAWgB,QAAS,kBAAMA,EAAQhB,IAAOA,KAAMA,EAAMC,MAAOA,EAAOY,UAAWA,U,OCa9EO,MAvBf,SAAiBL,GAAQ,IAErBf,EACEe,EADFf,KAAMqB,EACJN,EADIM,YAAaf,EACjBS,EADiBT,MAAOjB,EACxB0B,EADwB1B,SAAUiC,EAClCP,EADkCO,OAAQX,EAC1CI,EAD0CJ,MAE9C,OACE,gCACE,6BAAKX,IACL,4BAAIqB,IACJ,4BAAIf,IACJ,8CAEGjB,EACA,IAHH,WAKGsB,EACA,IANH,YAQGW,S,MCHMC,MAXf,SAAqBR,GAAQ,IACnB1B,EAAa0B,EAAb1B,SACR,OACE,qBAAKwB,UAAU,cAAf,SACG5B,EAAKuC,QAAO,SAACpC,GAAD,OAASC,EAAS8B,SAAS/B,EAAIC,WAA6B,QAAhBA,EAAS,MAAcF,KAAI,SAACC,GAAD,OAClF,cAAC,EAAD,eAAmCA,GAArBA,EAAIiC,mB,MCUXI,MAjBf,SAAgBV,GAAQ,IACdW,EAAwCX,EAAxCW,OAAQC,EAAgCZ,EAAhCY,aAAcC,EAAkBb,EAAlBa,cAC9B,OACE,sBAAKf,UAAU,SAAf,UACE,6BAAKa,IACL,+CAEGC,KAEH,gDAEGC,S,MCgCMC,MApCf,WAAgB,IAAD,EACmBC,mBAAS,CAAC,QAD7B,mBACNzC,EADM,KACI0C,EADJ,KAEb,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,CAEEa,OAAO,cACPC,aAAc1C,EAAKkB,OACnByB,cAAelC,EAAiBS,QAH5B,eAKN,cAAC,EAAD,CACEd,SAAUA,EACV2B,QAAS,SAACgB,GACR,GAAoB,QAAhBA,EACF,GAAI3C,EAAS8B,SAAS,OACpBY,EAAY,CAACC,SACR,GAAI3C,EAAS8B,SAASa,GAAc,CACzC,IAAMC,EAAQ5C,EAAS6C,QAAQF,GAC/B3C,EAAS8C,OAAOF,EAAO,GACvBF,EAAY,YAAI1C,SAEhB0C,EAAY,GAAD,mBAAK1C,GAAL,CAAe2C,UAG5BD,EAAY,CAAC,WAInB,cAAC,EAAD,CACE1C,SAAUA,IAEZ,cAAC,EAAD,QC3BS+C,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.886fe994.chunk.js","sourcesContent":["import data from './data.json'; // imports data.json\n\nexport default data; // export the native JS array\n\nconst allCategories = data.map((obj) => obj.category);\n\n// const uniqueCategories = Array.from(new Set(allCategories))\n\nconst cats = allCategories.reduce((acc, cat) => {\n  acc[cat] = 0;\n  return acc;\n}, {});\n\nconst uniqueCategories = Object.keys(cats);\n\nconst categoriesAndCounts = allCategories.reduce((acc, cat) => {\n  if (acc[cat] === undefined) {\n    acc[cat] = 1;\n  } else {\n    acc[cat] += 1;\n  }\n  return acc;\n}, {});\n\n// Objects cant be mapped, but we can map an array\nconst CatsAndCounts = uniqueCategories.map((name) => ({ name, count: categoriesAndCounts[name] }));\n\nCatsAndCounts.push({ name: 'All', count: data.length });\n\nexport {\n  allCategories,\n  uniqueCategories,\n  categoriesAndCounts,\n  CatsAndCounts,\n};\n","import React from 'react';\nimport data from '../data';\n\nconst total = data.reduce((acc, obj) => acc + parseFloat(obj.price.slice(1)), 0).toFixed(2);\n\nconst totalUnits = data.reduce((acc, obj) => acc + parseInt(obj.units, 10), 0);\n\nfunction Inventory() {\n  return (\n    <div className=\"Inventory\">\n      <h3>\n        Total Cost of Inventory $\n        {total}\n      </h3>\n      <h3>\n        Total Units:\n        {totalUnits}\n      </h3>\n    </div>\n  );\n}\n\nexport default Inventory;\n","import React from 'react';\n\nfunction CatButton(props) {\n  const {\n    name, count, className, onClick,\n  } = props;\n  return (\n    <button\n      type=\"button\"\n      key={name}\n      className={className}\n      onClick={onClick}\n    >\n      {name}\n      <span>\n        {count}\n      </span>\n    </button>\n  );\n}\n\nexport default CatButton;\n","import React from 'react';\nimport { CatsAndCounts } from '../data';\nimport CatButton from './CatButton';\nimport './CatagoryList.css';\n\nfunction CatagoryList(props) {\n  const { category, onClick } = props;\n  return (\n    <div className=\"CatagoryList\">\n      {CatsAndCounts.map((obj) => {\n        const { name, count } = obj;\n        const className = category.includes(name) ? 'selected' : '';\n        return <CatButton onClick={() => onClick(name)} name={name} count={count} className={className} />;\n      })}\n    </div>\n  );\n}\n\nexport default CatagoryList;\n","import React from 'react';\n\nfunction Product(props) {\n  const {\n    name, description, price, category, rating, units,\n  } = props;\n  return (\n    <div>\n      <h2>{name}</h2>\n      <p>{description}</p>\n      <p>{price}</p>\n      <small>\n        Category:\n        {category}\n        {' '}\n        | Units:\n        {units}\n        {' '}\n        | Rating:\n        {rating}\n      </small>\n    </div>\n  );\n}\n\nexport default Product;\n","import React from 'react';\nimport data from '../data';\nimport Product from './Product';\nimport './ProductList.css';\n\nfunction ProductList(props) {\n  const { category } = props;\n  return (\n    <div className=\"ProductList\">\n      {data.filter((obj) => category.includes(obj.category) || category[0] === 'All').map((obj) => (\n        <Product key={obj.description} {...obj} />\n      ))}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from 'react';\nimport './Header.css';\n\nfunction Header(props) {\n  const { titile, productCount, categoryCount } = props;\n  return (\n    <div className=\"Header\">\n      <h1>{titile}</h1>\n      <p>\n        Product Count:\n        {productCount}\n      </p>\n      <p>\n        Category Count:\n        {categoryCount}\n      </p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport data, { uniqueCategories } from './data';\nimport Inventory from './Inventory/Inventory';\n\nimport CatagoryList from './CatagoryList/CategoryList';\nimport ProductList from './ProductList/ProductList';\nimport Header from './Header/Header';\n\nimport './App.css';\n\nfunction App() {\n  const [category, setCategory] = useState(['All']);\n  return (\n    <div className=\"App\">\n      <Header\n        key=\"Productuify\"\n        titile=\"Productuify\"\n        productCount={data.length}\n        categoryCount={uniqueCategories.length}\n      />\n      <CatagoryList\n        category={category}\n        onClick={(newCategory) => {\n          if (newCategory !== 'All') {\n            if (category.includes('All')) {\n              setCategory([newCategory]);\n            } else if (category.includes(newCategory)) {\n              const index = category.indexOf(newCategory);\n              category.splice(index, 1);\n              setCategory([...category]);\n            } else {\n              setCategory([...category, newCategory]);\n            }\n          } else {\n            setCategory(['All']);\n          }\n        }}\n      />\n      <ProductList\n        category={category}\n      />\n      <Inventory />\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\n- div.App <- category\n  - Header\n  - CatagoryList (div.CategoryList)\n     - button\n     - button\n     - ...\n  - ProductList (div.ProductList)\n    - div\n      - h2\n      - p\n      - p\n      - small\n\n */\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}