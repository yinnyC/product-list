{"version":3,"sources":["data.js","Inventory/Inventory.js","CatagoryList/CategoryList.js","ProductList/Product.js","ProductList/ProductList.js","Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["data","allCategories","map","obj","category","cats","reduce","acc","cat","uniqueCategories","Object","keys","categoriesAndCounts","undefined","CatsAndCounts","name","count","push","length","total","parseFloat","price","slice","toFixed","totalUnits","parseInt","units","Inventory","className","CatagoryList","props","onClick","includes","Product","description","rating","ProductList","filter","Header","titile","productCount","categoryCount","App","useState","setCategory","newCategory","index","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1bbca3f.chunk.js","sourcesContent":["import data from './data.json' // imports data.json\n\nexport default data // export the native JS array\n\nconst allCategories = data.map((obj)=>obj.category)\n\n// const uniqueCategories = Array.from(new Set(allCategories))\n\nconst cats =  allCategories.reduce((acc,cat) => {\n  acc[cat]=0\n  return acc\n},{})\n\nconst uniqueCategories = Object.keys(cats)\n\nconst categoriesAndCounts = allCategories.reduce((acc,cat) =>{\n  if(acc[cat] === undefined){\n    acc[cat] =1 \n  } else {\n    acc[cat] += 1\n  }\n  return acc\n},{})\n\n// Objects cant be mapped, but we can map an array\nconst CatsAndCounts = uniqueCategories.map((name)=>{\n  return { name, count:categoriesAndCounts[name]}\n})\n\nCatsAndCounts.push({ name:'All', count:data.length})\n\nexport {\n  allCategories,\n  uniqueCategories,\n  categoriesAndCounts,\n  CatsAndCounts\n}","import data from '../data';\n\nconst total = data.reduce((acc, obj) => {\n  return acc + parseFloat(obj.price.slice(1))\n},0).toFixed(2)\n\nconst totalUnits = data.reduce((acc, obj) => {\n  return acc + parseInt(obj.units)\n},0)\n\nfunction Inventory(){\n  return(\n    <div className=\"Inventory\">\n      <h3>Total Cost of Inventory ${total} </h3>\n      <h3>Total Units: {totalUnits} </h3>\n    </div>\n  )\n}\n\nexport default Inventory;","import { CatsAndCounts } from '../data';\nimport './CatagoryList.css';\n\nfunction CatagoryList(props)\n{\n  const { category, onClick } = props\n  return (\n    <div className='CatagoryList'>\n        {CatsAndCounts.map((obj)=>{\n          const {name,count} = obj\n          const className = category.includes(name) ? 'selected' : ''\n          return (\n          <button\n            key = {name}\n            className={className}\n            onClick={ () => onClick(name) }\n          >\n            {name} \n            <span> {count} </span>\n          </button>)\n        })}\n    </div>\n  )\n}\n\nexport default CatagoryList","\n\nfunction Product(props) {\n  const {name,description,price,category,rating,units} = props\n  return (\n    <div>\n      <h2>{name}</h2>\n      <p>{description}</p>\n      <p>{price}</p>\n      <small>Category: {category} | Units: {units} | Rating: {rating} </small>\n    </div>\n  )\n}\n\nexport default Product;","import data from '../data'\nimport Product from './Product'\nimport './ProductList.css'\nfunction ProductList(props) {\n  const { category } = props\n  return(\n    <div className='ProductList'>\n        {data.filter(obj => category.includes(obj.category) || category[0] === 'All').map((obj) => {\n            return (\n              <Product key={obj.description} {...obj}/>\n            )\n          })}\n      </div>\n  )\n}\n\nexport default ProductList;","import './Header.css';\n\nfunction Header(props) {\n  const {titile,productCount, categoryCount} = props\n  return (\n    <div className='Header'>\n      <h1>{titile}</h1>\n      <p>Product Count: {productCount}</p>\n      <p>Category Count: {categoryCount}</p>\n    </div>\n  )\n}\n\nexport default Header;","import './App.css';\nimport {useState} from 'react';\nimport data, {uniqueCategories} from './data'\nimport Inventory from './Inventory/Inventory'\n\nimport CatagoryList from './CatagoryList/CategoryList'\nimport ProductList from './ProductList/ProductList'\nimport Header from './Header/Header'\n\nfunction App() {\n  const [category,setCategory] = useState(['All'])\n  return (\n    <div className=\"App\">\n      <Header\n        key = \"Productuify\" \n        titile=\"Productuify\" \n        productCount={ data.length } \n        categoryCount={ uniqueCategories.length }\n      />\n      <CatagoryList \n        category= { category }\n        onClick = { newCategory => {\n          if(newCategory !== 'All'){\n            if(category.includes('All')){\n              setCategory([newCategory])\n            } else {\n              if(category.includes(newCategory)){\n                const index = category.indexOf(newCategory)\n                setCategory(category.slice(index))\n              } else {\n                setCategory([...category,newCategory])\n              }\n            } \n          } else {\n            setCategory(['All'])\n          }\n        } }\n      />\n      <ProductList \n        category={ category }\n      />\n      <Inventory />\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\n- div.App <- category\n  - Header\n  - CatagoryList (div.CategoryList)\n     - button\n     - button\n     - ...\n  - ProductList (div.ProductList)\n    - div\n      - h2\n      - p\n      - p\n      - small\n\n */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}